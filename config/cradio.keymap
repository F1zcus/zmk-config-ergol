/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
//&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 32 33>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 31 30>;
            hold-trigger-on-release;
        };

        tapmod_thumb: tapmod_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_MOD_THUMB";
            flavor = "tap-unless-interrupted"; // wait for other home row mods
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        layer_thumb: layer_thumb {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_LAYER_THUMB";
            flavor = "tap-preferred"; // wait for other home row mods
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;

            quick-tap-ms = <150>;
            hold-trigger-key-positions = <12 13 11 15 16 17 18 19 14 10 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33>;
        };

        Callum: Callum {
            compatible = "zmk,behavior-hold-tap";
            label = "CALLUM";
            bindings = <&kp>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        layer_sticky: layer_sticky {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_STICKY";
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
            bindings = <&mo>, <&sk>;

            quick-tap-ms = <150>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33>;
        };
    };

    combos {
        compatible = "zmk,combos";

        FnLayer {
            bindings = <&mo 3>;
            key-positions = <32 33>;
        };

        FastEsc {
            bindings = <&kp ESC>;
            key-positions = <12 30>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q  &kp W  &kp E  &kp R                 &kp T                        &kp Y                  &kp U                 &kp I      &kp O       &kp P
&kp A  &kp S  &kp D  &kp F                 &kp G                        &kp H                  &kp J                 &kp K      &kp L       &kp SEMICOLON
&kp Z  &kp X  &kp C  &kp V                 &kp B                        &kp N                  &kp M                 &kp COMMA  &kp PERIOD  &kp FSLH
                     &layer_thumb 4 SPACE  &layer_sticky 1 RIGHT_ALT    &layer_sticky 2 LSHFT  &layer_thumb 5 ENTER
            >;
        };

        Nav {
            bindings = <
&trans      &trans      &kp TAB      &trans         &trans        &trans                    &trans                       &trans                   &trans           &trans
&trans      &kp DELETE  &kp ESCAPE   &kp BACKSPACE  &trans        &hmr LEFT_ALT LEFT_ARROW  &hmr RIGHT_SHIFT DOWN_ARROW  &hmr RCTRL UP_ARROW      &hmr RALT RIGHT  &hmr LEFT_GUI PRINTSCREEN
&caps_word  &trans      &kp LS(TAB)  &trans         &caps_word    &kp HOME                  &kp PAGE_DOWN                &hmr LEFT_ALT PAGE_DOWN  &kp END          &trans
                                     &trans         &trans        &trans                    &trans
            >;
        };

        Numeric {
            bindings = <
&kp LS(NUMBER_1)    &kp LS(NUMBER_2)         &kp LS(NUMBER_3)     &kp LS(NUMBER_4)     &kp LS(N5)                &kp LS(NUMBER_6)        &kp LS(N7)     &kp LS(N8)     &kp LS(N9)         &kp LS(N0)
&hml LGUI NUMBER_1  &hml RIGHT_ALT NUMBER_2  &hml LCTRL NUMBER_3  &hml LSHFT NUMBER_4  &hml LEFT_ALT NUMBER_5    &hmr LEFT_ALT NUMBER_6  &hmr RSHFT N7  &hmr RCTRL N8  &hmr RIGHT_ALT N9  &hmr LGUI N0
&kp F1              &kp F2                   &kp F3               &kp F4               &kp F5                    &kp F6                  &kp F7         &kp F8         &kp F9             &kp F10
                                                                  &kp F11              &kp F12                   &kp F11                 &kp F12
            >;
        };

        Media {
            bindings = <
&trans        &trans        &trans        &trans        &trans            &trans  &trans             &trans      &trans           &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL    &trans  &kp C_VOLUME_DOWN  &kp C_MUTE  &kp C_VOLUME_UP  &trans
&trans        &trans        &trans        &trans        &trans            &trans  &trans             &trans      &trans           &trans
                                          &trans        &trans            &trans  &trans
            >;
        };

        CallumLeft {
            bindings = <
&trans                     &trans                       &trans                 &trans                         &trans    &trans  &trans  &trans  &trans  &trans
&Callum LEFT_GUI LEFT_GUI  &Callum RIGHT_ALT RIGHT_ALT  &Callum LCTRL LCTRL    &Callum LEFT_SHIFT LEFT_SHIFT  &trans    &trans  &trans  &trans  &trans  &trans
&trans                     &trans                       &Callum LALT LEFT_ALT  &trans                         &trans    &trans  &trans  &trans  &trans  &trans
                                                                               &trans                         &trans    &trans  &trans
            >;
        };

        CallumRight {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans                           &trans                               &trans                       &trans
&trans  &trans  &trans  &trans  &trans    &trans  &Callum RIGHT_SHIFT RIGHT_SHIFT  &Callum RIGHT_CONTROL RIGHT_CONTROL  &Callum RIGHT_ALT RIGHT_ALT  &Callum RIGHT_GUI RIGHT_GUI
&trans  &trans  &trans  &trans  &trans    &trans  &trans                           &Callum LEFT_ALT LEFT_ALT            &trans                       &trans
                        &trans  &trans    &trans  &trans
            >;
        };
    };
};
