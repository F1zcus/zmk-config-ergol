/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt { quick-tap-ms = <200>; };

/ {
    behaviors {
        #ifndef HOMEY_HOLDING_TYPE
        #define HOMEY_HOLDING_TYPE "tap-preferred"
        #endif

        #ifndef HOMEY_HOLDING_TIME
        #define HOMEY_HOLDING_TIME 270
        #endif

        #ifndef HOMEY_STREAK_DECAY
        #define HOMEY_STREAK_DECAY 170
        #endif

        #ifndef HOMEY_REPEAT_DECAY
        #define HOMEY_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat
        #endif

    #ifndef THUMB_HOLDING_TYPE
    #define THUMB_HOLDING_TYPE "balanced"
    #endif
    #ifndef THUMB_HOLDING_TIME
    #define THUMB_HOLDING_TIME 300
    #endif
    #ifndef THUMB_REPEAT_DECAY
    #define THUMB_REPEAT_DECAY 300 // "tap then hold" for key auto-repeat
    #endif

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            flavor =
            HOMEY_HOLDING_TYPE;
            hold-trigger-on-release; // wait for other home row mods
            tapping-term-ms = <HOMEY_HOLDING_TIME>;
            quick-tap-ms = <HOMEY_REPEAT_DECAY>;
            require-prior-idle-ms = <HOMEY_STREAK_DECAY>;
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };

        dthumb: dual_thumb_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "DUAL_THUMB_LAYER";
            flavor =
            THUMB_HOLDING_TYPE;
            tapping-term-ms = <THUMB_HOLDING_TIME>;
            quick-tap-ms = <THUMB_REPEAT_DECAY>; // enable repeat
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        ThumbEsc {
            bindings = <&kp ESC>;
            key-positions = <30 31>;
        };

        Esc {
            bindings = <&kp ESC>;
            key-positions = <11 12 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q       &kp W            &kp E        &kp R                     &kp T              &kp Y                  &kp U                      &kp I        &kp O            &kp P
&hm LGUI A  &hm RIGHT_ALT S  &hm LCTRL D  &hm LSHFT F               &hm LEFT_ALT G     &hm LEFT_ALT H         &hm RSHFT J                &hm RCTRL K  &hm RIGHT_ALT L  &hm LGUI SEMI
&kp Z       &kp X            &lt 1 C      &lt 2 V                   &kp B              &kp N                  &lt 2 M                    &lt 1 COMMA  &kp DOT          &kp FSLH
                                          &dthumb LEFT_SHIFT SPACE  &lt 2 BACKSPACE    &dthumb RIGHT_ALT TAB  &dthumb RIGHT_SHIFT ENTER
            >;
        };

        Vim {
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR_ALL    &trans    &trans         &trans        &trans     &trans
&trans        &trans        &trans        &trans        &trans            &kp LEFT  &kp DOWN       &kp UP_ARROW  &kp RIGHT  &kp PRINTSCREEN
&caps_word    &kp K_CUT     &trans        &kp K_COPY    &kp K_PASTE       &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &trans
                                          &kp ESC       &kp DELETE        &trans    &trans
            >;
        };

        Numeric {
            bindings = <
&kp F1        &kp F2        &kp F3        &kp F4        &kp F5    &kp F6        &kp F7             &kp F8           &kp F9      &kp F10
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7             &kp N8           &kp N9      &kp N0
&trans        &trans        &kp F11       &kp F12       &trans    &trans        &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_MUTE  &trans
                                          &trans        &trans    &trans        &trans
            >;
        };

        num_layer {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT     &trans  &trans  &trans  &trans  &trans
&kp SEMI   &kp N4  &kp N5  &kp N6  &kp EQUAL    &trans  &trans  &trans  &trans  &trans
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH     &trans  &trans  &trans  &trans  &trans
                           &kp N0  &kp MINUS    &trans  &trans
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp RBRC        &trans  &trans  &trans  &trans  &trans
&kp COLON  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)  &kp PLUS        &trans  &trans  &trans  &trans  &trans
&kp TILDE  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(BSLH)    &trans  &trans  &trans  &trans  &trans
                                   &kp LS(N0)  &kp UNDER       &trans  &trans
            >;
        };
    };
};
